if (NOT MSVC AND NOT APPLE)
    add_subdirectory(tests)
endif()

configure_file(config_psd.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/config_psd.h)

include_directories(
    ${CMAKE_BINARY_DIR}/libs/psd
    ${CMAKE_SOURCE_DIR}/libs/psd
)  #For kispsd_include.h

include_directories(SYSTEM
    ${ZLIB_INCLUDE_DIR}
    ${Boost_INCLUDE_DIRS}
)

set(LIB_PSD_SRCS 
    psd_header.cpp
    psd_colormode_block.cpp
    psd_resource_section.cpp
    psd_resource_block.cpp
    psd_layer_section.cpp
    psd_layer_record.cpp
    psd_image_data.cpp
    psd_pixel_utils.cpp
    psd_additional_layer_info_block.cpp
)

#
# import
#

set(kritapsdimport_SOURCES
    psd_import.cc
    psd_loader.cpp
    ${LIB_PSD_SRCS}
)


add_library(kritapsdimport MODULE ${kritapsdimport_SOURCES})

target_link_libraries(kritapsdimport kritaglobal kritaui kritapsd KF5::I18n ${ZLIB_LIBRARIES})

install(TARGETS kritapsdimport DESTINATION ${KRITA_PLUGIN_INSTALL_DIR})

#
# export
#

set(kritapsdexport_SOURCES
    psd_export.cc
    psd_saver.cpp
    ${LIB_PSD_SRCS}
)

add_library(kritapsdexport MODULE ${kritapsdexport_SOURCES})

if (MSVC)
    target_link_libraries(kritapsdexport kritaui kritapsd ${WIN32_PLATFORM_NET_LIBS} ${ZLIB_LIBRARIES})
else ()	
    target_link_libraries(kritapsdexport kritaui kritapsd ${ZLIB_LIBRARIES})
endif ()	

install(TARGETS kritapsdexport DESTINATION ${KRITA_PLUGIN_INSTALL_DIR})

install( PROGRAMS  krita_psd.desktop  DESTINATION ${XDG_APPS_INSTALL_DIR})
